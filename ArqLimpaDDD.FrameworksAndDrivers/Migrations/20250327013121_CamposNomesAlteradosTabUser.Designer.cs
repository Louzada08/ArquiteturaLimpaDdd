// <auto-generated />
using System;
using ArqLimpaDDD.FrameWrkDrivers.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ArqLimpaDDD.FrameworksAndDrivers.Migrations
{
    [DbContext(typeof(DbSQLContext))]
    [Migration("20250327013121_CamposNomesAlteradosTabUser")]
    partial class CamposNomesAlteradosTabUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ArqLimpaDDD.Domain.Entities.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("createdat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deletedat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("launch_date")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("price")
                        .HasColumnType("decimal(7,2)");

                    b.Property<string>("title")
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("updatedat")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("book", (string)null);
                });

            modelBuilder.Entity("ArqLimpaDDD.Domain.Entities.Person", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("address");

                    b.Property<Guid?>("CreatedById")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit")
                        .HasColumnName("enabled");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("first_name");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("gender");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_name");

                    b.Property<DateTime?>("createdat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("deletedat")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("updatedat")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("person", (string)null);
                });

            modelBuilder.Entity("ArqLimpaDDD.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Refreshtoken")
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Userrole")
                        .HasColumnType("int");

                    b.Property<DateTime?>("createdat")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("deletedat")
                        .HasColumnType("datetime");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("fullname")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<DateTime?>("refreshTokenExpiryTime")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("updatedat")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("email")
                        .IsUnique();

                    b.ToTable("user", (string)null);
                });

            modelBuilder.Entity("ArqLimpaDDD.Domain.Entities.Book", b =>
                {
                    b.HasOne("ArqLimpaDDD.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("ArqLimpaDDD.Domain.Entities.Person", b =>
                {
                    b.HasOne("ArqLimpaDDD.Domain.Entities.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("CreatedBy");
                });
#pragma warning restore 612, 618
        }
    }
}
